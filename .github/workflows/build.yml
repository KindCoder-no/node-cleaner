name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Add permissions needed for creating releases
permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build Windows app
        run: npm run dist:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            release-builds/*.exe
            release-builds/*.msi
            release-builds/*.nsis.zip
  
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build macOS app
        run: npm run dist:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: |
            release-builds/*.dmg
            release-builds/*.zip

  # Optional: Create a GitHub release when a tag is pushed
  release:
    needs: [build-windows, build-macos]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        
      - name: Display structure of downloaded files
        run: ls -R artifacts/
        shell: bash
        
      # Try another release creation method
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          
      # Find and upload all artifacts 
      - name: Find and upload all artifacts
        run: |
          echo "Finding all artifacts..."
          find ./artifacts -type f -name "*.exe" -o -name "*.msi" -o -name "*.zip" -o -name "*.dmg" -o -name "*.AppImage" | while read file; do
            echo "Uploading $file..."
            filename=$(basename "$file")
            echo "Filename: $filename"
            
            if [[ "$file" == *".exe" ]]; then
              content_type="application/vnd.microsoft.portable-executable"
            elif [[ "$file" == *".msi" ]]; then
              content_type="application/x-msi"
            elif [[ "$file" == *".zip" ]]; then
              content_type="application/zip"
            elif [[ "$file" == *".dmg" ]]; then
              content_type="application/x-apple-diskimage"
            elif [[ "$file" == *".AppImage" ]]; then
              content_type="application/x-executable"
            else
              content_type="application/octet-stream"
            fi
            
            echo "Content type: $content_type"
            
            curl \
              -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: $content_type" \
              --data-binary @"$file" \
              "${{ steps.create_release.outputs.upload_url }}?name=$filename"
          done
        shell: bash
